{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["/**\n * WEB222 – Assignment 05\n *\n * I declare that this assignment is my own work in accordance with\n * Seneca Academic Policy. No part of this assignment has been\n * copied manually or electronically from any other source\n * (including web sites) or distributed to other students.\n *\n * Please update the following with your information:\n *\n *      Name:       Tsz Wa Wong\n *      Student ID: 152181228\n *      Date:       29 Mar 2024\n */\n\n// All of our data is available on the global `window` object.\n// Create local variables to work with it in this file.\nconst { artists, songs } = window;\n\nfunction generateArtistButtons(artists) {\n  const menu = document.querySelector(\"#menu\");\n\n  artists.forEach(function (artist) {\n    const artistButton = document.createElement(\"button\"); // create a button element\n    artistButton.textContent = artist.name; // set button text to artist name\n    menu.appendChild(artistButton);\n    if (artist.name === artists[0].name) {\n      //Display the first artist's top 5 songs by default\n      const header = document.getElementById(\"selected-artist\"); // select the h2 element with id selected-artist\n      header.textContent = \"Top 5 Songs Most Streamed by \" + artist.name + \" \";\n      const Wikipedia = document.createElement(\"a\");\n      Wikipedia.href = artist.urls[0].url; // set the href attribute of the anchor to the artist's Instagram URL\n      Wikipedia.textContent = \"(Wikipedia,\";\n      header.appendChild(Wikipedia); // append the anchor to the header\n      const Instagram = document.createElement(\"a\");\n      Instagram.href = artist.urls[1].url; // set the href attribute of the anchor to the artist's Instagram URL\n      Instagram.textContent = \" Instagram)\";\n      header.appendChild(Instagram); // append the anchor to the header\n      createSongCards(artist.artistId);\n    }\n\n    artistButton.addEventListener(\"click\", () => {\n      const cards = document.getElementById(\"cards\");\n      cards.innerHTML = \"\"; // clear the main element\n      const header = document.getElementById(\"selected-artist\"); // select the h2 element with id selected-artist\n      header.textContent = \"Top 5 Songs Most Streamed by \" + artist.name + \" \";\n      const Wikipedia = document.createElement(\"a\");\n      Wikipedia.href = artist.urls[0].url; // set the href attribute of the anchor to the artist's Instagram URL\n      Wikipedia.textContent = \"(Wikipedia,\";\n      header.appendChild(Wikipedia); // append the anchor to the header\n      const Instagram = document.createElement(\"a\");\n      Instagram.href = artist.urls[1].url; // set the href attribute of the anchor to the artist's Instagram URL\n      Instagram.textContent = \" Instagram)\";\n      header.appendChild(Instagram); // append the anchor to the header\n      createSongCards(artist.artistId);\n    });\n  });\n}\n\nfunction createSongCards(artistId) {\n  const cards = document.getElementById(\"cards\");\n  let songsByArtist = songs.filter((song) => song.artistId === artistId); // get the array of songs by the artist\n  songsByArtist.forEach((song) => {\n    const card = createSongCard(song);\n    if (card)\n      // check if the card is not null\n      cards.appendChild(card);\n  });\n}\n\nfunction createSongCard(song) {\n  if (song.explicit === false) {\n    const card = document.createElement(\"div\");\n    card.className = \"card\";\n\n    const songImg = document.createElement(\"img\");\n    songImg.src = song.imageUrl;\n    songImg.className = \"card-image\";\n\n    const songURL = document.createElement(\"a\");\n    songURL.href = song.url;\n    songURL.target = \"_blank\";\n    card.appendChild(songURL);\n    songURL.appendChild(songImg);\n\n    const songName = document.createElement(\"h2\");\n    songName.textContent = song.title;\n    songName.className = \"title\";\n    card.appendChild(songName);\n\n    const annotation = document.createElement(\"div\");\n    annotation.className = \"annotation\";\n    card.appendChild(annotation);\n\n    const songYear = document.createElement(\"span\");\n    songYear.textContent = \"Year : \" + song.year;\n    songYear.className = \"year\";\n    annotation.appendChild(songYear);\n\n    const songDuration = document.createElement(\"span\");\n    const songMinutes = Math.floor(song.duration / 60); // round down the minutes to the nearest whole number\n    const songSeconds = song.duration % 60;\n    if (songSeconds > 10) {\n      songDuration.textContent =\n        \"Duration : \" + songMinutes + \":\" + songSeconds;\n    } else {\n      songDuration.textContent =\n        \"Duration : \" + songMinutes + \":0\" + songSeconds;\n    }\n    songDuration.className = \"duration\";\n    annotation.appendChild(songDuration);\n\n    return card;\n  }\n}\n\nfunction main() {\n  console.log(\"page is loaded\");\n  generateArtistButtons(artists);\n}\nwindow.addEventListener(\"load\", main); // Make sure you don’t do anything to the DOM until it’s fully loaded.\n"],"names":[],"version":3,"file":"index.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}